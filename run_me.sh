#!/bin/bash


# Info & code from: https://blog.pragmatists.com/xml-be-cautious-69a981fdc56a

print_usage() {
    echo 'Usage: ./run_me.sh OPTION [arg]'
    echo ' '
    echo 'A script to show security concerns in XML processing.'
    echo ' '
    echo 'Options:'
    echo "    normal      A normal XML with no exploits"
    echo "    laughs      A \"billion laughs\" XML with a ridiculous number of nested entity expansions"
    echo "    quadratic   A \"quadratic blowup\" XML with a ridiculous number of entity expansions that aren't nested"
    echo "    disk        An external entity XML (XEE attack) with an entity expansion that reads from disk"
    echo ' '
    echo 'Args:'
    echo "    secure      Run the example after applying owasp's recommendations"
    echo ' '
}


if [ -z "$1" ]
then
    echo "Must specify an option!"
    echo ' '
    print_usage
    exit 1
fi


case $1 in
    clean)
        rm -rf *.class
        exit 0
        ;;
    normal)
        input_xml='normal.xml'
        ;;
    laughs)
        input_xml='billion-laughs.xml'
        ;;
    quadratic)
        input_xml='quadratic-blowup.xml'
        ;;
    disk)
        input_xml='read-file-from-disk.xml'
        ;;
    help)
        print_usage
        exit 0
        ;;
    *)
        echo "Unknown option: $1"
        echo ' '
        print_usage
        exit 1
        ;;
esac


javac XmlExploit.java && java XmlExploit $2 < client-input/$input_xml
exit $?
